package afti.proto.circuitcourt;

import android.content.Intent;
import android.net.Uri;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.ContextMenu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.widget.AdapterView;
import android.widget.Button;
import android.widget.ListView;
import android.widget.TextView;

import com.android.volley.Request;
import com.android.volley.RequestQueue;
import com.android.volley.Response;
import com.android.volley.VolleyError;
import com.android.volley.toolbox.JsonArrayRequest;
import com.android.volley.toolbox.JsonObjectRequest;
import com.android.volley.toolbox.Volley;

import org.json.JSONArray;
import org.json.JSONObject;

import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;

public class DetailExploitant extends AppCompatActivity {

    Globals globalVariable;
    private ListView mListView;
    private TextView nameText, addressText, cityText, descriptionText;
    private Button btnContact;
    String api_url;
    Shop shop;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_detail_exploitant);

        globalVariable = (Globals) getApplicationContext();
        api_url = globalVariable.getApiUrl();

        mListView = findViewById(R.id.listView);
        nameText = findViewById(R.id.nameText);
        addressText = findViewById(R.id.addressText);
        cityText = findViewById(R.id.cityText);
        descriptionText = findViewById(R.id.descriptionText);
        btnContact = findViewById(R.id.btnContact);

        registerForContextMenu(btnContact);

        Bundle extras = getIntent().getExtras();
        getInfoShop(extras.getInt("shop_num"));
    }

    private void getInfoShop(int shop_num){
        RequestQueue requestQueue = Volley.newRequestQueue(this);

        JsonObjectRequest jsonObjectRequest = new JsonObjectRequest
                (Request.Method.GET, api_url + "/getShop/" + shop_num, null, new Response.Listener<JSONObject>() {

                    @Override
                    public void onResponse(JSONObject response) {
                        try{
                             shop = new Shop(
                                 response.getString("shopName"),
                                 response.getString("shopCity"),
                                 response.getString("shopStreet"),
                                 response.getString("shopPostalCode"),
                                 response.getString("shopDescription"),
                                 response.getString("contacts"),
                                 response.getString("phone"),
                                 response.getDouble("shopLongitude"),
                                 response.getDouble("shopLatitude"),
                                 response.getInt("shopNum")
                            );

                            nameText.setText(shop.getName());
                            addressText.setText(shop.getStreet());
                            cityText.setText(shop.getPostal_code() + " " + shop.getCity());
                            descriptionText.setText(shop.getDescription());

                            getAllProducts();
                        }
                        catch (Exception e){
                            e.printStackTrace();
                        }
                    }
                }, new Response.ErrorListener() {

                    @Override
                    public void onErrorResponse(VolleyError e) {
                        e.printStackTrace();
                    }
                });

        requestQueue.add(jsonObjectRequest);
    }

    private void getAllProducts(){
        RequestQueue requestQueue = Volley.newRequestQueue(this);

        JsonArrayRequest jsonArrayRequest = new JsonArrayRequest
                (Request.Method.GET, api_url + "/getProducts/" + shop.getNum(), null, new Response.Listener<JSONArray>() {

                    @Override
                    public void onResponse(JSONArray response) {

                        try{
                            List<Product> products = new ArrayList<>();

                            for(int i = 0; i < response.length(); i++){
                                JSONObject productObject = response.getJSONObject(i);

                                products.add(
                                        new Product(
                                                productObject.getInt("_id"),
                                                productObject.getString("name"),
                                                productObject.getDouble("price"),
                                                productObject.getString("tags"),
                                                productObject.getString("type")
                                        )
                                );
                            }

                            ProductAdapter adapter = new ProductAdapter(DetailExploitant.this, products);
                            mListView.setAdapter(adapter);
                        }
                        catch (Exception e){
                            e.printStackTrace();
                        }
                    }
                }, new Response.ErrorListener() {

                    @Override
                    public void onErrorResponse(VolleyError e) {
                        e.printStackTrace();
                    }
                });

        requestQueue.add(jsonArrayRequest);
    }


    public void contact(View view){
        this.openContextMenu(btnContact);
    }

    @Override
    public void onCreateContextMenu(ContextMenu menu, View v, ContextMenu.ContextMenuInfo menuInfo) {
        super.onCreateContextMenu(menu, v, menuInfo);

        MenuInflater inflater = getMenuInflater();
        inflater.inflate(R.menu.context_menu, menu);

        menu.setHeaderTitle(
                String.format(
                        getResources().getString(R.string.titleContactContextMenu),
                        shop.getName()
                )
        );
    }

    @Override
    public boolean onContextItemSelected(MenuItem item) {
        switch (item.getItemId()) {
            case R.id.phone:
                contactByPhone();
                return true;
            case R.id.mail:
                contactByMail();
                return true;
            default:
                return super.onContextItemSelected(item);
        }
    }

    public void contactByPhone(){
        Intent callIntent = new Intent(Intent.ACTION_DIAL, Uri.parse("tel:"+shop.getPhone()));
        startActivity(callIntent);
    }

    public void contactByMail(){
        Intent i = new Intent(Intent.ACTION_SEND);
        i.setType("message/rfc822");
        i.putExtra(android.content.Intent.EXTRA_EMAIL, new String[]{shop.getContacts()});
        i.putExtra(android.content.Intent.EXTRA_SUBJECT, getResources().getString(R.string.mailObject));

        i.putExtra(
                android.content.Intent.EXTRA_TEXT,
                getResources().getString(R.string.mailContent) + globalVariable.getNickName()
        );
        startActivity(Intent.createChooser(i, getResources().getString(R.string.sendAppChoice)));
    }
}